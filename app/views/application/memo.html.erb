 <%# environment.jsのバックアップ @1/15に除去した部分 %>
 // 追記 21/1/6
//jQueryとBootstapのJSを使えるようにjQueryとBootstapのJSを使えるように
// const webpack = require('webpack')
// environment.plugins.prepend(
//   'Provide',
//   new webpack.ProvidePlugin({
//     $: 'jquery',
//     jQuery: 'jquery',
//     Popper: 'popper.js'
//   })
// )
// ここまで
<%# jsのテストファイル %>

    <%# jsが使用できるかのテスト%>
      <p>テスト</p>
      <script type="text/javascript">
        $(document).ready(function() {
        $("p").text("成功！！");
        });
      </script>
    <%# ここまで %>

<%# 多対多テンプレ %>
docker-compose run web bundle exec rails g model <model(中)> <model(多)1>:references <model(多)2>:references
docker-compose run web bundle exec rails g model user_group_relation user:references group:references

<%# テンプレ %>
AddColumnNullToGroups

<!-- User controller -->
docker-compose exec web rails g controller Users new show edit destroy

docker-compose run web rails g migration AddIndexToGroups

Group.where(id: 127..133).destroy_all

docker-compose run web rails g migration ChangeAdminuser_idToGroups

モデル名.columns_hash['カラム名'].type

<!-- Event -->

docker-compose run web bundle exec rails g model event group:references date:date start-time:time finish-time:time place:string maru:string batu:string remarks:text

docker-compose exec web rails g controller Events new edit show

docker-compose exec web rails destroy controller Event

<%# Answer model %>

docker-compose run web bundle exec rails g model Answer user:references event:references

<%# Answer controller %>

docker-compose exec web rails g controller Answers show edit 

docker-compose run web rails g migration change_answer_of_Answers
<%= f.select :faculty, [["理工学部", "理工学部"], ["経済学部", "経済学部"], ["法学部", "法学部"], ["医学部", "医学部"]], include_blank: "選択して下さい" %>

<%# stylesheets/application.scssの2行を消した %>
 *= require_tree .
 *= require_self

 <!-- ここからlink付きfontawesome -->
<%= link_to URLヘルパー, class: "btn btn-danger", method: :delete do %>
  <i class="far fa-trash-alt"></i> #=>　アイコンのコード
<% end %>

<%# 画像投稿機能 %>
docker-compose run web bundle exec rails g uploader image
docker-compose run web rails generate migration add_image_to_users image:string

<%# 画像表示のバックアップ %>
<div class="col-lg-6" style="max-width: 150px;">
  <img src= <%="/assets/cuba#{1}.jpeg"%> class="card-img" alt="...">
</div>

<%# 画像保存済みの場合はサムネイルを表示 %>
<div class="row no-gutters">
  <div class="col-lg-6" style="max-width: 150px;">
    <%= image_tag "#{@user.image}" if @user.image? %>
  </div>
</div>

<%# %><%#= group.index %>
<img src= <%="/assets/group#{i+1}.png"%> class="card-img-top" alt="...">


<%# ここから検索フォームのテスト %>
<%= form_tag root_path, method: :get, class: 'boards__searchForm' do %>
      <%= select_tag :tag_id,
                     options_from_collection_for_select(Group.all, :id, :introduction, params[:tag_id]),
                     {
                       prompt: 'タグで絞り込み検索',
                       onchange: 'submit(this.form);'
                     }
      %>
<% end %>

<%# group_join action のメモ %>
  #グループ参加申請処理
  def join
    #グループに参加済みの人の処理
    if @group.users.ids.include?(current_user.id) then
      redirect_to group_path(@group), flash: { notice: "#{@group.name}にはすでに参加済みです"}
    #グループに新規参加の人の処理
    else 
      @group.users << current_user #group_user_relationsにidを格納させる
      Event.where(group_id: @group.id).each_with_index do |group_event| #Eventを次々に取得 1/12編集
        group_event.users << current_user #Anserに(event_id,user_id)を紐付ける 1/12追記
      end
      redirect_to group_path(@group), flash: { notice: "「#{current_user.name}が#{@group.name}に参加しました"}
    end
  end

Private
  def set_target_group
    @group = Group.find(params[:id])
  end

<%# ターミナル記述メモ %>
docker-compose exec web rails g controller joins new edit show

docker-compose run web bundle exec rails g model Join user:references group:references

<div class="col-lg-1"><%= link_to '申請', join_group_path(@group) , class: 'btn btn-outline-info'%></div> 
<%# %>


<%#= answer.answer %>